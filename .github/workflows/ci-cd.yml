name: CI/CD Pipeline

on:
  push:
    branches:
      - master # Runs when code is pushed to the master branch
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Run Unit and E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install Dependencies
        run: npm install

      # - name: Run Unit Tests (Jest)
      #   run: npm run test:unit

      # - name: Run Cypress Tests
      #   uses: cypress-io/github-action@v6
      #   with:
      #     install: false
      #     start: npm run dev
      #     wait-on: 'http://localhost:9000'
      #     browser: chrome

      - name: Run E2E Test (Cypress)
        run: npm run test

  build:
    name: Build Quasar App
    runs-on: ubuntu-latest
    needs: false # Runs only if tests pass

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install Dependencies
        run: npm install

      - name: Install Quasar Locally
        run: npm i -g @quasar/cli

      - name: Build for Production
        run: quasar build -m pwa

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: quasar-dist
          path: dist/spa

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build # Runs only if the build is successful

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: quasar-dist
          path: dist/spa

      # Deploy to Cloudflare
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          directory: dist/pwa
          branch: master
          gitHubToken: ${{ secrets.MY_GITHUB_TOKEN }}
